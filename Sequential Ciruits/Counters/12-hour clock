module top_module(
    input clk,
    input reset,
    input ena,
    output pm,
    output [7:0] hh,
    output [7:0] mm,
    output [7:0] ss); 
    
    count60ss ss0(clk,reset,ena,ss);
    count60mm mm0(clk,reset,ena,mm);

endmodule

module BCD(
    input clk,
    input reset,
    input ena,
    output [3:0]count
);
    
    always@(posedge clk)begin
        if(reset)
            count <= 'd0;
        else if (ena && (count<'d9))
            count <= count+1;
        else if (ena && (count == 'd9))
            count <= 'd0;
        else if (!ena)
            count <= count;
        else
            count <= count;
    end
    
endmodule

module count60ss(
    input clk,
    input reset,
    input ena,
    output [7:0]ss
);
    wire ena1;
    
    BCD U0(clk,reset,ena,ss[3:0]); 
    
    assign ena1=(ss[3:0]=='d9)?1:0;
    
    always@(posedge clk)begin
        if(reset)
            ss[7:4] <= 'd0;
        else if ((ena1 && ena) && (ss[7:4]<'d5))
           ss[7:4]  <= ss[7:4]+1;
        else if ((ena1 && ena) && (ss[3:0]=='d9) && (ss[7:4]=='d5))
           ss[7:4]  <= 'd0;
        else
            ss[7:4] <= ss[7:4];
    end
    
endmodule

module count60mm(
    input clk,
    input reset,
    input ena,
    output [7:0]mm
);
    wire ena1;
    wire [7:0]ss;
    count60ss ss0(clk,reset,ena,ss);
    assign ena1=((ss[3:0]=='d9)&&(ss[7:4]=='d5))?1:0;
    
    wire ena2;
    assign ena2=((ss[3:0]=='d9)&&(ss[7:4]=='d5)&&(mm[3:0]=='d9))?1:0;
    
    
    always@(posedge clk)begin
        if(reset)
            mm[3:0] <= 'd0;
        else if ((ena1 && ena) && (mm[3:0]<'d9))
            mm[3:0] <= mm[3:0]+1;
        else if ((ena1 && ena) && (mm[3:0]=='d9))
            mm[3:0] <= 'd0;
        else
            mm[3:0] <= mm[3:0];
    end
    
    always@(posedge clk)begin
        if(reset)
            mm[7:4] <= 'd0;
        else if ((ena2 && ena) && (mm[7:7]<'d5))
            mm[7:4] <= mm[7:4]+1;
        else if ((ena2 && ena) && (mm[7:4]=='d5) && (mm[3:0]=='d9))
            mm[7:4] <= 'd0;
        else
            mm[7:4] <= mm[7:4];
    end
    
    
endmodule
